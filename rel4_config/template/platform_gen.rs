/*
 * This file is autogenerated by rel4_config.
 */

pub const PHYS_BASE_RAW: usize = {{ PHYS_BASE | hex }};

/* TIMER SETUP */
pub const TIMER_CLOCK_HZ: usize = {{ freq }};
{% for param in timer_settings %}
pub const {{ param.label }}: usize = {{ param.value }};
{% endfor %}

/* riscv interrupts, fixed */
{% if arch == "riscv" %}
#[cfg(feature = "enable_smp")]
pub const PLIC_IRQ_OFFSET: usize = 0;
pub const PLIC_MAX_IRQ: usize = 0;

#[cfg(feature = "enable_smp")]
pub const INTERRUPT_IPI_0: usize = 1;
#[cfg(feature = "enable_smp")]
pub const INTERRUPT_IPI_1: usize = 2;
#[cfg(feature = "enable_smp")]
pub const KERNEL_TIMER_IRQ: usize = 3;

#[cfg(all(not(feature = "enable_smp")))]
pub const KERNEL_TIMER_IRQ: usize = 1;
pub const MAX_IRQ: usize = KERNEL_TIMER_IRQ;
pub const IRQ_INVALID: usize = 0;
{% endif %}

/* INTERRUPTS */
// TODO: support feature select
{% for irq in kernel_irqs %}
pub const {{ irq.label }}: usize = {{ irq.number }};
{% endfor %}

/* KERNEL DEVICES */
#[allow(unused_imports)]
use crate::structures::{kernel_frame_t, p_region_t, paddr_t};
#[allow(unused_imports)]
use crate::arch::config::KDEV_BASE;

#[no_mangle]
#[link_section = ".boot.text"]
pub static mut kernel_device_frames: [kernel_frame_t; {{ device_regions | length }}] = [
{% for region in device_regions %}
    /* {{region.desc}} */
    kernel_frame_t {
        paddr: paddr_t({{ region.paddr | hex }}),
        pptr: KDEV_BASE + {{ region.pptr_offset | hex }},
        armExecuteNever: {{ region.arm_execute_never }},
        userAvailable: {{ region.user_available }},
    },
{% endfor %}
]; 

/* PHYSICAL MEMORY */
#[cfg(feature = "build_binary")]
#[link_section = ".boot.text"]
pub static avail_p_regs: [p_region_t; {{ avail_mem_zones | length }}] = [
{% for zone in avail_mem_zones %}
    p_region_t {
        start: {{ zone.start | hex }},
        end: {{ zone.end | hex }},
    },
{% endfor %}
];