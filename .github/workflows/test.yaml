name: Test Kernel

on:
  workflow_dispatch:
  push:

jobs:
  test-build:
    # if: ${{ contains(github.event.head_commit.message, 'git subrepo')}}
    runs-on: ubuntu-latest
    container:
      image: croakexciting/rel4_dev:0.0.6
      volumes:
        - .:/code
    strategy:
      matrix:
        arch: [riscv64, aarch64]
        mcs: [OFF, ON]
    steps:
      - uses: actions/checkout@v4
        with:
          path: rel4_kernel
      - uses: actions/checkout@v4
        with:
          ref: "master"
          path: kernel
          repository: reL4team2/seL4_c_impl
      - name: Install generaic tools
        run: apt update && apt install -y wget gcc-${{ matrix.arch }}-linux-gnu
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly-2024-02-01
          components: rust-src
          rustflags:
      - name: Adapt dependencies
        run: |
          cd rel4_kernel
          cargo update -p home --precise 0.5.5
      - name: Make rel4_kernel
        run: cd rel4_kernel/kernel && make ARCH=${{ matrix.arch }} MCS=${{ matrix.mcs }} run
      - name: Build kernel
        run: cd kernel && cmake cmake -DCROSS_COMPILER_PREFIX=${{ matrix.arch }}-linux-gnu- -DMCS=${{matrix.mcs}} -C kernel-settings-${{ matrix.arch }}.cmake -G Ninja -S . -B build
      - name: Build Kernel
        run: cd kernel && ninja -C build
  sel4-test:
    # if: ${{ contains(github.event.head_commit.message, 'git subrepo')}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [spike, qemu-arm-virt]
        include:
          - platform: qemu-arm-virt
            arch: aarch64
          - platform: spike
            arch: riscv64
    container:
      image: croakexciting/rel4_dev:0.0.6
      options: --user=root
    defaults:
      run:
        working-directory: ./sel4-test
    steps:
      - run: mkdir sel4-test
        working-directory: .
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly-2024-02-01
          components: rust-src rustfmt
          rustflags:
          target: riscv64gc-unknown-none-elf aarch64-unknown-none-softfloat
      - name: Install qemu
        run: apt update && apt -y install qemu-system-misc qemu-system-aarch64
      - name: Clone Menifest && Sync repositories
        run: | 
          repo init -u https://github.com/reL4team2/sel4test-manifest.git -b ci-test 
          sed -i "19c\ \t<project name=\"rel4-integral.git\" path=\"rel4_kernel\" revision=\"${{ github.sha }}\" remote=\"seL4_kernel\" upstream=\"master\" dest-branch=\"master\"/>"  .repo/manifests/default.xml
          repo sync
      - run: cd kernel && git checkout master
      - name: Adapt dependencies
        run: |
          cd rel4_kernel
          cargo update -p home --precise 0.5.5
      # - run: cd rel4_kernel && git checkout master
      - name: Build
        env:
          ARCH: ${{ matrix.arch  }}
          PLATFORM: ${{ matrix.platform }}
        run: |
          echo $ARCH
          echo $PLATFORM
          cd rel4_kernel && cargo xtask build -p $PLATFORM -m off --bin
      - name: simulate
        env:
          ARCH: ${{ matrix.arch  }}
          PLATFORM: ${{ matrix.platform }}
        run: cd rel4_kernel/build && ./simulate > 1.log
        timeout-minutes: 3
        continue-on-error: true
      - run: cat rel4_kernel/build/1.log
      - name: Check Result
        run: rel4_kernel/.github/workflows/parse.py rel4_kernel/build/1.log
  sel4-test-mcs:
    # if: ${{ contains(github.event.head_commit.message, 'git subrepo')}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [spike, qemu-arm-virt]
        include:
          - platform: qemu-arm-virt
            arch: aarch64
          - platform: spike
            arch: riscv64
    container:
      image: croakexciting/rel4_dev:0.0.6
      options: --user=root
    defaults:
      run:
        working-directory: ./sel4-test
    steps:
      - run: mkdir sel4-test
        working-directory: .
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly-2024-02-01
          components: rust-src rustfmt
          rustflags:
          target: riscv64gc-unknown-none-elf aarch64-unknown-none-softfloat
      - name: Install qemu
        run: apt update && apt -y install qemu-system-misc qemu-system-aarch64
      - name: Clone Menifest && Sync repositories
        run: | 
          repo init -u https://github.com/reL4team2/sel4test-manifest.git -b ci-test 
          sed -i "19c\ \t<project name=\"rel4-integral.git\" path=\"rel4_kernel\" revision=\"${{ github.sha }}\" remote=\"seL4_kernel\" upstream=\"master\" dest-branch=\"master\"/>"  .repo/manifests/default.xml
          repo sync
      - run: cd kernel && git checkout master
      # - run: cd rel4_kernel && git checkout master
      - name: Adapt dependencies
        run: |
          cd rel4_kernel
          cargo update -p home --precise 0.5.5
      - name: Build
        env:
          ARCH: ${{ matrix.arch  }}
          PLATFORM: ${{ matrix.platform }}
        run: |
          echo $ARCH
          echo $PLATFORM
          cd rel4_kernel && cargo xtask build -p $PLATFORM -m on --bin
      - name: simulate
        env:
          ARCH: ${{ matrix.arch  }}
          PLATFORM: ${{ matrix.platform }}
        run: cd rel4_kernel/build && ./simulate > 1.log
        timeout-minutes: 5
        continue-on-error: true
      - run: cat rel4_kernel/build/1.log
      - name: Check Result
        run: rel4_kernel/.github/workflows/parse.py rel4_kernel/build/1.log
  sel4-test-smc:
    # if: ${{ contains(github.event.head_commit.message, 'git subrepo')}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [qemu-arm-virt]
        mcs: [on, off]
        include:
          - platform: qemu-arm-virt
            arch: aarch64
    container:
      image: croakexciting/rel4_dev:0.0.6
      options: --user=root
    defaults:
      run:
        working-directory: ./sel4-test
    steps:
      - run: mkdir sel4-test
        working-directory: .
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly-2024-02-01
          components: rust-src rustfmt
          rustflags:
          target: aarch64-unknown-none-softfloat
      - name: Install qemu
        run: apt update && apt -y install wget make python3 xz-utils python3-venv ninja-build bzip2 meson pkg-config libglib2.0-dev git libslirp-dev && pip3 install tomli && wget https://download.qemu.org/qemu-9.2.2.tar.xz && tar xf qemu-9.2.2.tar.xz && cd qemu-9.2.2 && ./configure --target-list=aarch64-softmmu --enable-slirp && make -j$(nproc) && make install
      - name: Clone Menifest && Sync repositories
        run: | 
          repo init -u https://github.com/reL4team2/sel4test-manifest.git -b ci-test 
          sed -i "19c\ \t<project name=\"rel4-integral.git\" path=\"rel4_kernel\" revision=\"${{ github.sha }}\" remote=\"seL4_kernel\" upstream=\"master\" dest-branch=\"master\"/>"  .repo/manifests/default.xml
          repo sync
      - run: cd kernel && git checkout master
      # - run: cd rel4_kernel && git checkout master
      - name: Adapt dependencies
        run: |
          cd rel4_kernel
          cargo update -p home --precise 0.5.5
      - name: Build
        env:
          ARCH: ${{ matrix.arch  }}
          PLATFORM: ${{ matrix.platform }}
          MCS: ${{ matrix.mcs }}
        run: |
          echo $ARCH
          echo $PLATFORM
          cd rel4_kernel && cargo xtask build -p $PLATFORM -m $MCS -s on --bin
      - name: simulate
        env:
          ARCH: ${{ matrix.arch  }}
          PLATFORM: ${{ matrix.platform }}
        run: cd rel4_kernel/build && ./simulate > 1.log
        timeout-minutes: 5
        continue-on-error: true
      - run: cat rel4_kernel/build/1.log
      - name: Check Result
        run: rel4_kernel/.github/workflows/parse.py rel4_kernel/build/1.log
  rel4-test-linux:
    runs-on: ubuntu-latest
    container:
      image: croakexciting/rel4_dev:0.0.6
      options: --user=root
    defaults:
      run:
        working-directory: ./sel4-test
    steps:
      - run: mkdir sel4-test
        working-directory: .
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly-2024-02-01
          components: rust-src rustfmt
          rustflags:
          target: aarch64-unknown-none-softfloat
      - name: Install qemu
        run: apt update && apt -y install wget make python3 xz-utils python3-venv ninja-build bzip2 meson pkg-config libglib2.0-dev git libslirp-dev libclang-dev && pip3 install tomli && wget https://download.qemu.org/qemu-9.2.2.tar.xz && tar xf qemu-9.2.2.tar.xz && cd qemu-9.2.2 && ./configure --target-list=aarch64-softmmu --enable-slirp && make -j$(nproc) && make install
      - name: Clone auto-build
        run: | 
          git clone https://github.com/reL4team2/rel4-kernel-autobuild.git -b rel4-integrate
          cargo install --git https://github.com/reL4team2/reL4-cli.git
          cargo install --git https://github.com/seL4/rust-sel4 --rev 1cd063a0f69b2d2045bfa224a36c9341619f0e9b sel4-kernel-loader-add-payload
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - run: cd rel4-kernel-autobuild && ./build-bin.sh > log.txt
        timeout-minutes: 10
        continue-on-error: true
      - run: cat rel4-kernel-autobuild/log.txt
      - name: Check Result
        run: |
          echo "$(pwd)" && ls -la 
          rel4-kernel-autobuild/parse_linux_kit.py rel4-kernel-autobuild/log.txt

